# set xmlns:ns1="http://iec.ch/TC57/CIM100#" 

SELECT ?class (COUNT(?class) as ?cnt)
WHERE {
  ?s a ?class .
} group by ?class order by ?class

# list the base voltage levels - DistBaseVoltage
PREFIX r:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX c:  <http://iec.ch/TC57/CIM100#>
SELECT DISTINCT ?vnom
WHERE {
# ?fdr c:IdentifiedObject.mRID ?fdrid.
# ?s c:Equipment.EquipmentContainer ?fdr.
# {?s c:ConductingEquipment.BaseVoltage ?lev.}
#  UNION
# { ?end c:PowerTransformerEnd.PowerTransformer|c:TransformerTankEnd.TransformerTank ?s.
#   ?end c:TransformerEnd.BaseVoltage ?lev.}
 ?lev r:type c:BaseVoltage.
 ?lev c:BaseVoltage.nominalVoltage ?vstr.
  bind(xsd:float(?vstr) as ?vnom)
}
ORDER BY ?vnom

# list all the feeders, with substations and regions - DistFeeder
PREFIX r:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX c:  <http://iec.ch/TC57/CIM100#>
SELECT ?feeder ?fid ?station ?sid ?subregion ?sgrid ?region ?rgnid WHERE {
 ?s r:type c:Feeder.
 ?s c:IdentifiedObject.name ?feeder.
 ?s c:IdentifiedObject.mRID ?fid.
# ?s c:Feeder.NormalEnergizingSubstation ?sub.
# ?sub c:IdentifiedObject.name ?station.
# ?sub c:IdentifiedObject.mRID ?sid.
# ?sub c:Substation.Region ?sgr.
# ?sgr c:IdentifiedObject.name ?subregion.
# ?sgr c:IdentifiedObject.mRID ?sgrid.
# ?sgr c:SubGeographicalRegion.Region ?rgn.
# ?rgn c:IdentifiedObject.name ?region.
# ?rgn c:IdentifiedObject.mRID ?rgnid.
}
#ORDER by ?station ?feeder

# loads (need to account for 2+ unequal EnergyConsumerPhases per EnergyConsumer) - DistLoad
PREFIX r:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX c:  <http://iec.ch/TC57/CIM100#>
SELECT ?name ?bus ?basev ?p ?q ?conn ?cnt ?pz ?qz ?pi ?qi ?pp ?qp ?pe ?qe ?fdrid ?t1id (group_concat(distinct ?phs;separator="\n") as ?phases) WHERE {
 ?s r:type c:EnergyConsumer.
# feeder selection options - if all commented out, query matches all feeders
#VALUES ?fdrid {"9CE150A8-8CC5-A0F9-B67E-BBD8C79D3095"}  # R2 12.47 3
 ?s c:Equipment.AdditionalEquipmentContainer ?fdr. # was EquipmentContainer
 ?fdr c:IdentifiedObject.mRID ?fdrid.
 ?s c:IdentifiedObject.name ?name.
 ?s c:ConductingEquipment.BaseVoltage ?bv.
 ?bv c:BaseVoltage.nominalVoltage ?basev.
 ?s c:EnergyConsumer.customerCount ?cnt.
# ?s c:EnergyConsumer.p ?p. # part of SSH?
# ?s c:EnergyConsumer.q ?q. # part of SSH?
 ?s c:EnergyConsumer.phaseConnection ?connraw.
   bind(strafter(str(?connraw),"PhaseShuntConnectionKind.") as ?conn)
 ?s c:EnergyConsumer.LoadResponse ?lr.
 ?lr c:LoadResponseCharacteristic.pConstantImpedance ?pz.
 ?lr c:LoadResponseCharacteristic.qConstantImpedance ?qz.
 ?lr c:LoadResponseCharacteristic.pConstantCurrent ?pi.
 ?lr c:LoadResponseCharacteristic.qConstantCurrent ?qi.
 ?lr c:LoadResponseCharacteristic.pConstantPower ?pp.
 ?lr c:LoadResponseCharacteristic.qConstantPower ?qp.
# ?lr c:LoadResponseCharacteristic.pVoltageExponent ?pe.
# ?lr c:LoadResponseCharacteristic.qVoltageExponent ?qe.
 OPTIONAL {?ecp c:EnergyConsumerPhase.EnergyConsumer ?s.
 ?ecp c:EnergyConsumerPhase.phase ?phsraw.
   bind(strafter(str(?phsraw),"SinglePhaseKind.") as ?phs) }
 ?t c:Terminal.ConductingEquipment ?s.
 ?t c:Terminal.ConnectivityNode ?cn. 
 ?t c:IdentifiedObject.mRID ?t1id. 
 ?cn c:IdentifiedObject.name ?bus
}
GROUP BY ?name ?bus ?basev ?p ?q ?cnt ?conn ?pz ?qz ?pi ?qi ?pp ?qp ?pe ?qe ?fdrid ?t1id
ORDER by ?name

# cim100 - DistBreaker, DistFuse, DistRecloser, DistLoadBreakSwitch have been tested (PREFERRED)
# does not represent different phasing on two sides of a switch
# only uses one group_concat so we can retrieve and match bus1-t1id, bus2-t2id
PREFIX r:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX c:  <http://iec.ch/TC57/CIM100#>
SELECT ?name ?bus1 ?bus2 ?basev ?open ?continuous ?breaking ?fdrid ?t1id ?t2id (group_concat(distinct ?phs;separator="\n") as ?phases) WHERE {
 ?s r:type c:Breaker.
# ?s r:type c:Disconnector.
# ?s r:type c:Fuse.
# ?s r:type c:GroundDisconnector.
# ?s r:type c:Jumper.
# ?s r:type c:Recloser.
# ?s r:type c:LoadBreakSwitch.  # a Switch in GMDM?
# ?s r:type c:Sectionaliser.
 ?s c:Equipment.AdditionalEquipmentContainer ?fdr.
 ?fdr c:IdentifiedObject.mRID ?fdrid.
 ?s c:IdentifiedObject.name ?name.
# ?s c:ConductingEquipment.BaseVoltage ?bv.
# ?bv c:BaseVoltage.nominalVoltage ?basev.
 ?s c:Switch.normalOpen ?open.
 ?s c:Switch.ratedCurrent ?continuous.
 OPTIONAL {?s c:ProtectedSwitch.breakingCapacity ?breaking.}
 ?t1 c:Terminal.ConductingEquipment ?s.
 ?t1 c:Terminal.ConnectivityNode ?cn1.
 ?t1 c:ACDCTerminal.sequenceNumber "1".
 ?t1 c:IdentifiedObject.mRID ?t1id.
 ?cn1 c:IdentifiedObject.name ?bus1.
 ?t2 c:Terminal.ConductingEquipment ?s.
 ?t2 c:Terminal.ConnectivityNode ?cn2.
 ?t2 c:ACDCTerminal.sequenceNumber "2".
 ?cn2 c:IdentifiedObject.name ?bus2.
 ?t2 c:IdentifiedObject.mRID ?t2id.
 OPTIONAL {?swp c:SwitchPhase.Switch ?s.
 ?swp c:SwitchPhase.phaseSide1 ?phsraw.
   bind(strafter(str(?phsraw),"SinglePhaseKind.") as ?phs) }
}
GROUP BY ?name ?bus1 ?bus2 ?basev ?open ?continuous ?breaking ?fdrid ?t1id ?t2id
ORDER BY ?name

# wire spacings - DistLineSpacing
PREFIX r:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX c:  <http://iec.ch/TC57/CIM100#>
SELECT DISTINCT ?name ?cable ?usage ?bundle_count ?bundle_sep ?id ?seq ?x ?y
WHERE {
# feeder selection options - if all commented out, query matches all feeders
#VALUES ?fdrid {"803ED06B-9DC7-630C-E538-D6DBBFDE022D"}  # CIM100 13 bus assets
 ?eq r:type c:ACLineSegment.
# ?eq c:Equipment.EquipmentContainer ?fdr.
# ?fdr c:IdentifiedObject.mRID ?fdrid.
 ?eq c:ACLineSegment.WireSpacingInfo ?w.
 ?w c:IdentifiedObject.name ?name.
 ?w c:IdentifiedObject.mRID ?id.
 ?pos c:WirePosition.WireSpacingInfo ?w.
 ?pos c:WirePosition.xCoord ?x.
 ?pos c:WirePosition.yCoord ?y.
 ?pos c:WirePosition.sequenceNumber ?seq.
 ?w c:WireSpacingInfo.isCable ?cable.
 ?w c:WireSpacingInfo.phaseWireCount ?bundle_count.
 ?w c:WireSpacingInfo.phaseWireSpacing ?bundle_sep.
 ?w c:WireSpacingInfo.usage ?useraw.
   bind(strafter(str(?useraw),"WireUsageKind.") as ?usage).
}
ORDER BY ?name ?id ?seq

# wiredata actually used - DistOverheadWire
PREFIX r:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX c:  <http://iec.ch/TC57/CIM100#>
SELECT DISTINCT ?name ?rad ?corerad ?gmr ?rdc ?r25 ?r50 ?r75 ?amps ?ins ?insmat ?insthick WHERE {
# feeder selection options - if all commented out, query matches all feeders
#VALUES ?fdrid {"E0172D35-7A23-1CE5-9883-1A65D4409E2B"}  # 13 bus
#VALUES ?fdrid {"803ED06B-9DC7-630C-E538-D6DBBFDE022D"}  # 13 bus assets
# ?eq r:type c:ACLineSegment.
# ?eq c:Equipment.EquipmentContainer ?fdr.
# ?fdr c:IdentifiedObject.mRID ?fdrid.
# ?acp c:ACLineSegmentPhase.ACLineSegment ?eq.
# ?acp c:ACLineSegmentPhase.WireInfo ?w.
 ?w r:type c:WireInfo.  # was OverheadWireInfo
 ?w c:IdentifiedObject.name ?name.
 ?w c:WireInfo.radius ?rad.
 ?w c:WireInfo.gmr ?gmr.
 OPTIONAL {?w c:WireInfo.rDC20 ?rdc.}
 OPTIONAL {?w c:WireInfo.rAC25 ?r25.}
 OPTIONAL {?w c:WireInfo.rAC50 ?r50.}
 OPTIONAL {?w c:WireInfo.rAC75 ?r75.}
 OPTIONAL {?w c:WireInfo.coreRadius ?corerad.}
 OPTIONAL {?w c:WireInfo.ratedCurrent ?amps.}
 OPTIONAL {?w c:WireInfo.insulationMaterial ?insraw.
     bind(strafter(str(?insraw),"WireInsulationKind.") as ?insmat)}
 OPTIONAL {?w c:WireInfo.insulated ?ins.}
 OPTIONAL {?w c:WireInfo.insulationThickness ?insthick.}
}
ORDER BY ?name

# per-length phase impedance matrics actually used - DistPhaseMatrix
PREFIX r:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX c:  <http://iec.ch/TC57/CIM100#>
SELECT DISTINCT ?name ?cnt ?row ?col ?r ?x ?b WHERE {
# feeder selection options - if all commented out, query matches all feeders
#VALUES ?fdrid {"C1C3E687-6FFD-C753-582B-632A27E28507"}  # 123 bus
#VALUES ?fdrid {"49AD8E07-3BF9-A4E2-CB8F-C3722F837B62"}  # 13 bus
#VALUES ?fdrid {"5B816B93-7A5F-B64C-8460-47C17D6E4B0F"}  # 13 bus assets
#VALUES ?fdrid {"4F76A5F9-271D-9EB8-5E31-AA362D86F2C3"}  # 8500 node
#VALUES ?fdrid {"67AB291F-DCCD-31B7-B499-338206B9828F"}  # J1
#VALUES ?fdrid {"9CE150A8-8CC5-A0F9-B67E-BBD8C79D3095"}  # R2 12.47 3
# ?eq r:type c:ACLineSegment.
# ?eq c:Equipment.EquipmentContainer ?fdr.
# ?fdr c:IdentifiedObject.mRID ?fdrid.
# ?eq c:ACLineSegment.PerLengthImpedance ?s.
 ?s r:type c:PerLengthPhaseImpedance.
 ?s c:IdentifiedObject.name ?name.
 ?s c:PerLengthPhaseImpedance.conductorCount ?cnt.
 ?elm c:PhaseImpedanceData.PhaseImpedance ?s.
 ?elm c:PhaseImpedanceData.row ?row.
 ?elm c:PhaseImpedanceData.column ?col.
 ?elm c:PhaseImpedanceData.r ?r.
 ?elm c:PhaseImpedanceData.x ?x.
# ?elm c:PhaseImpedanceData.b ?b
}
ORDER BY ?name ?row ?col

# lines referencing linecodes - DistLinesCodeZ
PREFIX r:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX c:  <http://iec.ch/TC57/CIM100#>
SELECT ?name ?basev ?bus1 ?bus2	?len ?lname ?fdrid ?seq ?phs ?t1id ?t2id
#     (group_concat(distinct ?seq;separator="\n") as ?seqs) 
#     (group_concat(distinct ?phs;separator="\n") as ?phases) 
# the group_concat doesn't maintain order, so we can't rely on synchronization between the phases and sequence numbers
# here, we explicitly retain separate row for each phase, and order them by sequenceNumber
WHERE {
# feeder selection options - if all commented out, query matches all feeders
#VALUES ?fdrid {"AAE94E4A-2465-6F5E-37B1-3E72183A4E44"}
 ?s r:type c:ACLineSegment.
 ?s c:Equipment.AdditionalEquipmentContainer ?fdr. # was just EquipmentContainer
 ?fdr c:IdentifiedObject.mRID ?fdrid.
 ?s c:IdentifiedObject.name ?name.
 ?s c:ConductingEquipment.BaseVoltage ?bv.
 ?bv c:BaseVoltage.nominalVoltage ?basev.
 ?s c:Conductor.length ?len.
 ?s c:ACLineSegment.PerLengthImpedance ?lcode.
 ?lcode c:IdentifiedObject.name ?lname. 
 ?t1 c:Terminal.ConductingEquipment ?s.
 ?t1 c:Terminal.ConnectivityNode ?cn1.
 ?t1 c:ACDCTerminal.sequenceNumber "1".
 ?t1 c:IdentifiedObject.mRID ?t1id.
 ?cn1 c:IdentifiedObject.name ?bus1.
 ?t2 c:Terminal.ConductingEquipment ?s.
 ?t2 c:Terminal.ConnectivityNode ?cn2.
 ?t2 c:ACDCTerminal.sequenceNumber "2".
 ?t2 c:IdentifiedObject.mRID ?t2id.
 ?cn2 c:IdentifiedObject.name ?bus2.
 OPTIONAL {?acp c:ACLineSegmentPhase.ACLineSegment ?s.
   ?acp c:ACLineSegmentPhase.phase ?phsraw.
   ?acp c:ACLineSegmentPhase.sequenceNumber ?seq.
     bind(strafter(str(?phsraw),"SinglePhaseKind.") as ?phs)}
}
ORDER BY ?name ?seq ?phs

# line segments with individual phase wire assignments, ordered by phase - DistLinesSpacingZ granular format (PREFERRED)
PREFIX r:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX c:  <http://iec.ch/TC57/CIM100#>
SELECT ?name ?id ?basev ?bus1 ?bus2 ?fdrid ?len ?spacing ?phs ?phname ?phclass ?t1id ?t2id
    WHERE {
# feeder selection options - if all commented out, query matches all feeders
#VALUES ?fdrid {"AAE94E4A-2465-6F5E-37B1-3E72183A4E44"}
 ?s r:type c:ACLineSegment.
 ?s c:Equipment.AdditionalEquipmentContainer ?fdr.  # was just EquipmentContainer
 ?fdr c:IdentifiedObject.mRID ?fdrid.
 ?s c:IdentifiedObject.name ?name.
 ?s c:IdentifiedObject.mRID ?id.
 ?s c:ConductingEquipment.BaseVoltage ?bv.
 ?bv c:BaseVoltage.nominalVoltage ?basev.
 ?s c:Conductor.length ?len.
 ?s c:ACLineSegment.WireSpacingInfo ?inf.
 ?inf c:IdentifiedObject.name ?spacing.
 ?t1 c:Terminal.ConductingEquipment ?s.
 ?t1 c:Terminal.ConnectivityNode ?cn1.
 ?t1 c:ACDCTerminal.sequenceNumber "1".
 ?t1 c:IdentifiedObject.mRID ?t1id.
 ?cn1 c:IdentifiedObject.name ?bus1.
 ?t2 c:Terminal.ConductingEquipment ?s.
 ?t2 c:Terminal.ConnectivityNode ?cn2.
 ?t2 c:ACDCTerminal.sequenceNumber "2".
 ?cn2 c:IdentifiedObject.name ?bus2.
 ?t2 c:IdentifiedObject.mRID ?t2id.
 ?acp c:ACLineSegmentPhase.ACLineSegment ?s.
 ?acp c:ACLineSegmentPhase.phase ?phsraw.
   bind(strafter(str(?phsraw),"SinglePhaseKind.") as ?phs)
 ?acp c:ACLineSegmentPhase.WireInfo ?phinf.
 ?acp c:ACLineSegmentPhase.sequenceNumber ?seq.
 ?phinf c:IdentifiedObject.name ?phname.
 ?phinf a ?phclassraw.
   bind(strafter(str(?phclassraw),"CIM100#") as ?phclass)
}
ORDER BY ?name ?seq ?phs

# capacitors (does not account for 2+ unequal phases on same LinearShuntCompensator) - DistCapacitor
PREFIX r:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX c:  <http://iec.ch/TC57/CIM100#>
SELECT ?name ?basev ?nomu ?bsection ?sections ?bus ?conn ?grnd ?phs ?ctrlenabled ?discrete ?mode ?deadband ?setpoint ?delay ?monclass ?moneq ?monbus ?monphs ?id ?fdrid ?t1id WHERE {
 ?s r:type c:LinearShuntCompensator.
# feeder selection options - if all commented out, query matches all feeders
#VALUES ?fdrid {"C1C3E687-6FFD-C753-582B-632A27E28507"}  # 123 bus
#VALUES ?fdrid {"49AD8E07-3BF9-A4E2-CB8F-C3722F837B62"}  # 13 bus
#VALUES ?fdrid {"5B816B93-7A5F-B64C-8460-47C17D6E4B0F"}  # 13 bus assets
#VALUES ?fdrid {"4F76A5F9-271D-9EB8-5E31-AA362D86F2C3"}  # 8500 node
#VALUES ?fdrid {"67AB291F-DCCD-31B7-B499-338206B9828F"}  # J1
#VALUES ?fdrid {"9CE150A8-8CC5-A0F9-B67E-BBD8C79D3095"}  # R2 12.47 3
 ?s c:Equipment.AdditionalEquipmentContainer ?fdr.  # was just EquipmentContainer
 ?fdr c:IdentifiedObject.mRID ?fdrid.
 ?s c:IdentifiedObject.name ?name.
 ?s c:ConductingEquipment.BaseVoltage ?bv.
 ?bv c:BaseVoltage.nominalVoltage ?basev.
 ?s c:ShuntCompensator.nomU ?nomu. 
 ?s c:LinearShuntCompensator.b0PerSection ?bsection. # we want bPerSection, not b0 and g0; they put bPerSection on LCSPhase
# ?s c:ShuntCompensator.sections ?sections. # part of SSH?
 ?s c:ShuntCompensator.phaseConnection ?connraw.
   bind(strafter(str(?connraw),"PhaseShuntConnectionKind.") as ?conn)
# ?s c:ShuntCompensator.grounded ?grnd.
 OPTIONAL {?scp c:ShuntCompensatorPhase.ShuntCompensator ?s.
 ?scp c:ShuntCompensatorPhase.phase ?phsraw.
   bind(strafter(str(?phsraw),"SinglePhaseKind.") as ?phs) }
# OPTIONAL {?ctl c:RegulatingControl.RegulatingCondEq ?s.
 OPTIONAL {?s c:LinearShuntCompensator.RegulatingControl ?ctl.
#          ?ctl c:RegulatingControl.discrete ?discrete.
#          ?ctl c:RegulatingControl.enabled ?ctrlenabled.
          ?ctl c:RegulatingControl.mode ?moderaw.
           bind(strafter(str(?moderaw),"RegulatingControlModeKind.") as ?mode)
          ?ctl c:RegulatingControl.monitoredPhase ?monraw.
           bind(strafter(str(?monraw),"PhaseCode.") as ?monphs)
#          ?ctl c:RegulatingControl.targetDeadband ?deadband.
#          ?ctl c:RegulatingControl.targetValue ?setpoint.
#          ?s c:ShuntCompensator.aVRDelay ?delay.
          ?ctl c:RegulatingControl.Terminal ?trm.
          ?trm c:Terminal.ConductingEquipment ?eq.
          ?eq a ?classraw.
           bind(strafter(str(?classraw),"CIM100#") as ?monclass)
          ?eq c:IdentifiedObject.name ?moneq.
          ?trm c:Terminal.ConnectivityNode ?moncn.
          ?moncn c:IdentifiedObject.name ?monbus.
          }
 ?s c:IdentifiedObject.mRID ?id. 
 ?t c:Terminal.ConductingEquipment ?s.
 ?t c:Terminal.ConnectivityNode ?cn. 
 ?t c:IdentifiedObject.mRID ?t1id.
 ?cn c:IdentifiedObject.name ?bus
}
ORDER by ?name

# substation source - DistSubstation
PREFIX r:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX c:  <http://iec.ch/TC57/CIM100#>
SELECT ?name ?bus ?basev ?nomv ?vmag ?vang ?r1 ?x1 ?r0 ?x0 ?t1id WHERE {
 ?s r:type c:EnergySource.
# feeder selection options - if all commented out, query matches all feeders
#VALUES ?fdrid {"C1C3E687-6FFD-C753-582B-632A27E28507"}  # 123 bus
#VALUES ?fdrid {"49AD8E07-3BF9-A4E2-CB8F-C3722F837B62"}  # 13 bus
#VALUES ?fdrid {"5B816B93-7A5F-B64C-8460-47C17D6E4B0F"}  # 13 bus assets
#VALUES ?fdrid {"4F76A5F9-271D-9EB8-5E31-AA362D86F2C3"}  # 8500 node
#VALUES ?fdrid {"67AB291F-DCCD-31B7-B499-338206B9828F"}  # J1
#VALUES ?fdrid {"9CE150A8-8CC5-A0F9-B67E-BBD8C79D3095"}  # R2 12.47 3
 ?s c:Equipment.EquipmentContainer ?lev.  # this is not the Feeder!
 ?s c:IdentifiedObject.name ?name.
 ?lev c:VoltageLevel.BaseVoltage ?bv.
 ?bv c:BaseVoltage.nominalVoltage ?basev.
 ?s c:EnergySource.nominalVoltage ?nomv. 
# ?s c:EnergySource.voltageMagnitude ?vmag. 
# ?s c:EnergySource.voltageAngle ?vang. 
 ?s c:EnergySource.r ?r1. 
 ?s c:EnergySource.x ?x1. 
 ?s c:EnergySource.r0 ?r0. 
 ?s c:EnergySource.x0 ?x0. 
 ?t c:Terminal.ConductingEquipment ?s.
 ?t c:Terminal.ConnectivityNode ?cn. 
 ?t c:IdentifiedObject.mRID ?t1id.
 ?cn c:IdentifiedObject.name ?bus
}
ORDER by ?name

# Solar - DistSolar
PREFIX r:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX c:  <http://iec.ch/TC57/CIM100#>
SELECT ?name ?bus ?ratedS ?ratedU ?maxP ?minP ?maxQ ?minQ ?ipu ?p ?q ?controlMode ?fdrid ?pecid ?t1id (group_concat(distinct ?phs;separator="\n") as ?phases) WHERE {
 ?s r:type c:PhotoVoltaicUnit. # was PhotovoltaicUnit
 ?s c:IdentifiedObject.name ?name.
 ?s c:PowerElectronicsUnit.maxP ?maxP.
 ?s c:PowerElectronicsUnit.minP ?minP.
# ?pec c:PowerElectronicsConnection.PowerElectronicsUnit ?s.
 ?s c:PowerElectronicsUnit.PowerElectronicsConnection ?pec.
# feeder selection options - if all commented out, query matches all feeders
#VALUES ?fdrid {"49AD8E07-3BF9-A4E2-CB8F-C3722F837B62"}  # 13 bus
#VALUES ?fdrid {"5B816B93-7A5F-B64C-8460-47C17D6E4B0F"}  # 13 bus assets
 ?pec c:Equipment.AdditionalEquipmentContainer ?fdr.
 ?fdr c:IdentifiedObject.mRID ?fdrid.
 ?pec c:PowerElectronicsConnection.ratedS ?ratedS.
 ?pec c:PowerElectronicsConnection.ratedU ?ratedU.
# ?pec c:PowerElectronicsConnection.maxIFault ?ipu.
# ?pec c:PowerElectronicsConnection.p ?p.
# ?pec c:PowerElectronicsConnection.q ?q.
 ?pec c:PowerElectronicsConnection.minQ ?minQ.
 ?pec c:PowerElectronicsConnection.maxQ ?maxQ.
# {?pec c:PowerElectronicsConnection.controlMode ?modeRaw.
#  bind(strafter(str(?modeRaw),"ConverterControlModeKind.") as ?controlMode)}
 ?pec c:IdentifiedObject.mRID ?pecid.
 OPTIONAL {?pecp c:PowerElectronicsConnectionPhase.PowerElectronicsConnection ?pec.
 ?pecp c:PowerElectronicsConnectionPhase.phase ?phsraw.
   bind(strafter(str(?phsraw),"SinglePhaseKind.") as ?phs) }
 ?t c:Terminal.ConductingEquipment ?pec.
 ?t c:Terminal.ConnectivityNode ?cn. 
 ?t c:IdentifiedObject.mRID ?t1id.
 ?cn c:IdentifiedObject.name ?bus
}
GROUP by ?name ?bus ?ratedS ?ratedU ?maxP ?minP ?maxQ ?minQ ?ipu ?p ?q ?controlMode ?fdrid ?pecid ?t1id
ORDER by ?name

# Storage - DistStorage
PREFIX r:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX c:  <http://iec.ch/TC57/CIM100#>
SELECT ?name ?bus ?ratedS ?ratedU ?maxP ?minP ?maxQ ?minQ ?ipu ?ratedE ?storedE ?state ?p ?q ?controlMode ?id ?fdrid ?pecid ?t1id (group_concat(distinct ?phs;separator="\n") as ?phases) WHERE {
 ?s r:type c:BatteryUnit.
 ?s c:IdentifiedObject.name ?name.
 ?s c:IdentifiedObject.mRID ?id.
# ?pec c:PowerElectronicsConnection.PowerElectronicsUnit ?s.
 ?s c:PowerElectronicsUnit.PowerElectronicsConnection ?pec.
# feeder selection options - if all commented out, query matches all feeders
#VALUES ?fdrid {"49AD8E07-3BF9-A4E2-CB8F-C3722F837B62"}  # 13 bus
#VALUES ?fdrid {"5B816B93-7A5F-B64C-8460-47C17D6E4B0F"}  # 13 bus assets
 ?pec c:Equipment.AdditionalEquipmentContainer ?fdr. # was EquipmentContainer
 ?fdr c:IdentifiedObject.mRID ?fdrid.
 ?pec c:PowerElectronicsConnection.ratedS ?ratedS.
 ?pec c:PowerElectronicsConnection.ratedU ?ratedU.
# ?pec c:PowerElectronicsConnection.maxIFault ?ipu.
 ?pec c:IdentifiedObject.mRID ?pecid.
 ?s c:PowerElectronicsUnit.maxP ?maxP.
 ?s c:PowerElectronicsUnit.minP ?minP.
 ?s c:BatteryUnit.ratedE ?ratedE.
# ?s c:BatteryUnit.storedE ?storedE.
# ?s c:BatteryUnit.batteryState ?stateraw.
#   bind(strafter(str(?stateraw),"BatteryStateKind.") as ?state)
# ?pec c:PowerElectronicsConnection.p ?p.
# ?pec c:PowerElectronicsConnection.q ?q. 
 ?pec c:PowerElectronicsConnection.maxQ ?maxQ.
 ?pec c:PowerElectronicsConnection.minQ ?minQ. 
# {?pec c:PowerElectronicsConnection.controlMode ?modeRaw.
#  bind(strafter(str(?modeRaw),"ConverterControlModeKind.") as ?controlMode)}
 OPTIONAL {?pecp c:PowerElectronicsConnectionPhase.PowerElectronicsConnection ?pec.
 ?pecp c:PowerElectronicsConnectionPhase.phase ?phsraw.
   bind(strafter(str(?phsraw),"SinglePhaseKind.") as ?phs) }
 ?t c:Terminal.ConductingEquipment ?pec.
 ?t c:Terminal.ConnectivityNode ?cn. 
 ?t c:IdentifiedObject.mRID ?t1id.
 ?cn c:IdentifiedObject.name ?bus
}
GROUP by ?name ?bus ?ratedS ?ratedU ?maxP ?minP ?maxQ ?minQ ?ipu ?ratedE ?storedE ?state ?p ?q ?controlMode ?id ?fdrid ?pecid ?t1id
ORDER by ?name

# Wind - new DistWind
PREFIX r:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX c:  <http://iec.ch/TC57/CIM100#>
SELECT ?name ?bus ?ratedS ?ratedU ?maxP ?minP ?maxQ ?minQ ?ipu ?p ?q ?controlMode ?fdrid ?pecid ?t1id (group_concat(distinct ?phs;separator="\n") as ?phases) WHERE {
 ?s r:type c:PowerElectronicsWindUnit.
 ?s c:IdentifiedObject.name ?name.
 ?s c:PowerElectronicsUnit.maxP ?maxP.
 ?s c:PowerElectronicsUnit.minP ?minP.
 ?s c:PowerElectronicsUnit.PowerElectronicsConnection ?pec.
 ?pec c:Equipment.AdditionalEquipmentContainer ?fdr.
 ?fdr c:IdentifiedObject.mRID ?fdrid.
 ?pec c:PowerElectronicsConnection.ratedS ?ratedS.
 ?pec c:PowerElectronicsConnection.ratedU ?ratedU.
 ?pec c:PowerElectronicsConnection.minQ ?minQ.
 ?pec c:PowerElectronicsConnection.maxQ ?maxQ.
 ?pec c:IdentifiedObject.mRID ?pecid.
 OPTIONAL {?pecp c:PowerElectronicsConnectionPhase.PowerElectronicsConnection ?pec.
 ?pecp c:PowerElectronicsConnectionPhase.phase ?phsraw.
   bind(strafter(str(?phsraw),"SinglePhaseKind.") as ?phs) }
 ?t c:Terminal.ConductingEquipment ?pec.
 ?t c:Terminal.ConnectivityNode ?cn. 
 ?t c:IdentifiedObject.mRID ?t1id.
 ?cn c:IdentifiedObject.name ?bus
}
GROUP by ?name ?bus ?ratedS ?ratedU ?maxP ?minP ?maxQ ?minQ ?ipu ?p ?q ?controlMode ?fdrid ?pecid ?t1id
ORDER by ?name

# ===========================================
# starting to work on transformers
# ===========================================

# transformer codes; short-circuit tests - DistXfmrCodeSCTest
PREFIX r:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX c:  <http://iec.ch/TC57/CIM100#>
SELECT DISTINCT ?tname ?enum ?gnum ?z ?ll WHERE {
# feeder selection options - if all commented out, query matches all feeders
#VALUES ?fdrid {"49AD8E07-3BF9-A4E2-CB8F-C3722F837B62"}  # 13 bus
#VALUES ?fdrid {"5B816B93-7A5F-B64C-8460-47C17D6E4B0F"}  # 13 bus assets
# ?eq c:Equipment.EquipmentContainer ?fdr.
# ?fdr c:IdentifiedObject.mRID ?fdrid.
# ?xft c:TransformerTank.PowerTransformer ?eq. 
# ?xft c:TransformerTank.TransformerTankInfo ?t.
 ?t c:IdentifiedObject.name ?tname.
 ?e c:TransformerEndInfo.TransformerTankInfo ?t.
 ?e c:TransformerEndInfo.endNumber ?enum.
 ?sct c:ShortCircuitTest.EnergisedEnd ?e.
 ?sct c:ShortCircuitTest.leakageImpedance ?z.
 ?sct c:ShortCircuitTest.loss ?ll.
 ?sct c:ShortCircuitTest.GroundedEnds ?grnd.
 ?grnd c:TransformerEndInfo.endNumber ?gnum.
}
ORDER BY ?tname ?enum ?gnum

# transformer codes; no-load tests - DistXfmrCodeNLTest
PREFIX r:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX c:  <http://iec.ch/TC57/CIM100#>
SELECT DISTINCT ?tname ?nll ?iexc WHERE {
 ?xft c:TransformerTank.PowerTransformer ?eq.
 ?xft c:TransformerTank.TransformerTankInfo ?t.
 ?t c:IdentifiedObject.name ?tname.
 ?e c:TransformerEndInfo.TransformerTankInfo ?t.
 ?nlt c:NoLoadTest.EnergisedEnd ?e.
 ?nlt c:NoLoadTest.loss ?nll.
 ?nlt c:NoLoadTest.excitingCurrent ?iexc
}
ORDER BY ?tname

# TransformerTankInfo mesh impedances - NOT DistPowerXfmrMesh
PREFIX r:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX c:  <http://iec.ch/TC57/CIM100#>
SELECT ?tname ?fnum ?tnum ?r ?x WHERE {
 ?t c:IdentifiedObject.name ?tname.
 ?from c:TransformerEndInfo.TransformerTankInfo ?t.
 ?imp c:TransformerMeshImpedance.FromTransformerEndInfo ?from.
 ?imp c:TransformerMeshImpedance.ToTransformerEndInfo ?to.
 ?imp c:TransformerMeshImpedance.r ?r.
 ?imp c:TransformerMeshImpedance.x ?x.
 ?from c:TransformerEndInfo.endNumber ?fnum.
 ?to c:TransformerEndInfo.endNumber ?tnum.
}
ORDER BY ?pname ?fnum ?tnum

# TransformerTankInfo core branches - NOT DistPowerXfmrCore
PREFIX r:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX c:  <http://iec.ch/TC57/CIM100#>
SELECT ?tname ?enum ?b ?g WHERE {
 ?t c:IdentifiedObject.name ?tname.
 ?end c:TransformerEndInfo.TransformerTankInfo ?t.
 ?adm c:TransformerCoreAdmittance.TransformerEndInfo ?end.
 ?end c:TransformerEndInfo.endNumber ?enum.
 ?adm c:TransformerCoreAdmittance.b ?b.
 ?adm c:TransformerCoreAdmittance.g ?g.
}
ORDER BY ?pname

# power transformers
PREFIX r:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX c:  <http://iec.ch/TC57/CIM100#>
SELECT ?pname ?vgrp ?fdrid WHERE {
 ?p c:Equipment.AdditionalEquipmentContainer ?fdr.
 ?fdr c:IdentifiedObject.mRID ?fdrid.
 ?p r:type c:PowerTransformer.
 ?p c:IdentifiedObject.name ?pname.
 ?p c:PowerTransformer.vectorGroup ?vgrp.
}
ORDER BY ?pname

# transformer tanks referencing the catalog - DistXfmrTank
PREFIX r:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX c:  <http://iec.ch/TC57/CIM100#>
SELECT ?pname ?tname ?xfmrcode ?vgrp ?enum ?bus ?basev ?orderedPhases ?grounded ?rground ?xground ?fdrid ?t1id WHERE {
 ?p r:type c:PowerTransformer.
# feeder selection options - if all commented out, query matches all feeders
#VALUES ?fdrid {"49AD8E07-3BF9-A4E2-CB8F-C3722F837B62"}  # 13 bus
#VALUES ?fdrid {"5B816B93-7A5F-B64C-8460-47C17D6E4B0F"}  # 13 bus assets
 ?p c:Equipment.AdditionalEquipmentContainer ?fdr.
 ?fdr c:IdentifiedObject.mRID ?fdrid.
 ?p c:IdentifiedObject.name ?pname.
 ?p c:PowerTransformer.vectorGroup ?vgrp.
 ?t c:TransformerTank.PowerTransformer ?p.
 ?t c:IdentifiedObject.name ?tname.
 ?t c:TransformerTank.TransformerTankInfo ?inf.
 ?inf c:IdentifiedObject.name ?xfmrcode.
 ?end c:TransformerTankEnd.TransformerTank ?t.
 ?end c:TransformerTankEnd.orderedPhases ?phsraw.
  bind(strafter(str(?phsraw),"PhaseCode.") as ?orderedPhases) # was strafter OrderedPhaseCodeKind
 ?end c:TransformerEnd.endNumber ?enum.
 ?end c:TransformerEnd.grounded ?grounded.
 OPTIONAL {?end c:TransformerEnd.rground ?rground.}
 OPTIONAL {?end c:TransformerEnd.xground ?xground.}
 ?end c:TransformerEnd.Terminal ?trm.
 ?trm c:Terminal.ConnectivityNode ?cn. 
 ?trm c:IdentifiedObject.mRID ?t1id. 
 ?cn c:IdentifiedObject.name ?bus.
 ?end c:TransformerEnd.BaseVoltage ?bv.
 ?bv c:BaseVoltage.nominalVoltage ?basev
}
ORDER BY ?pname ?tname ?enum

# transformer codes; winding ratings actually used - DistXfmrCodeRating
PREFIX r:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX c:  <http://iec.ch/TC57/CIM100#>
SELECT DISTINCT ?tname ?enum ?ratedS ?ratedU ?conn ?ang ?res ?id ?eid ?ename WHERE {
 ?eq c:Equipment.AdditionalEquipmentContainer ?fdr.
 ?fdr c:IdentifiedObject.mRID ?fdrid.
 ?xft c:TransformerTank.PowerTransformer ?eq.
 ?xft c:TransformerTank.TransformerTankInfo ?t.
 ?t c:IdentifiedObject.name ?tname.
 ?t c:IdentifiedObject.mRID ?id.
 ?e c:TransformerEndInfo.TransformerTankInfo ?t.
 ?e c:IdentifiedObject.mRID ?eid.
 ?e c:IdentifiedObject.name ?ename.
 ?e c:TransformerEndInfo.endNumber ?enum.
 ?e c:TransformerEndInfo.ratedS ?ratedS.
 ?e c:TransformerEndInfo.ratedU ?ratedU.
 ?e c:TransformerEndInfo.r ?res.
 ?e c:TransformerEndInfo.phaseAngleClock ?ang.
 ?e c:TransformerEndInfo.connectionKind ?connraw.
   bind(strafter(str(?connraw),"WindingConnection.") as ?conn)
}
ORDER BY ?tname ?enum

# ===========================================
# starting to work on regulators
# ===========================================

# voltage regulators - DistRegulator
PREFIX r:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX c:  <http://iec.ch/TC57/CIM100#>
SELECT ?rname ?pname ?tname ?wnum ?orderedPhases ?incr ?mode ?enabled ?highStep ?lowStep ?neutralStep ?normalStep ?neutralU 
 ?step ?initDelay ?subDelay ?ltc ?vlim ?vmin
	?vset ?vbw ?ldc ?fwdR ?fwdX ?revR ?revX ?discrete ?ctl_enabled ?ctlmode ?monphs ?ctRating ?ctRatio ?ptRatio ?fdrid ?pxfid
WHERE {
#VALUES ?fdrid {"49AD8E07-3BF9-A4E2-CB8F-C3722F837B62"}  # 13 bus
#VALUES ?fdrid {"5B816B93-7A5F-B64C-8460-47C17D6E4B0F"}  # 13 bus assets
 ?pxf c:Equipment.AdditionalEquipmentContainer ?fdr.
 ?fdr c:IdentifiedObject.mRID ?fdrid.
 ?rtc r:type c:RatioTapChanger.
 ?rtc c:IdentifiedObject.name ?rname.
 ?rtc c:RatioTapChanger.TransformerEnd ?end.
 ?end c:TransformerEnd.endNumber ?wnum.
{?end c:PowerTransformerEnd.PowerTransformer ?pxf.}
  UNION
{?end c:TransformerTankEnd.TransformerTank ?tank.
 ?tank c:IdentifiedObject.name ?tname.
 OPTIONAL {?end c:TransformerTankEnd.orderedPhases ?phsraw.
  bind(strafter(str(?phsraw),"PhaseCode.") as ?orderedPhases)}  # was strafter OrderedPhaseCodeKind
 ?tank c:TransformerTank.PowerTransformer ?pxf.}
 ?pxf c:IdentifiedObject.name ?pname.
 ?pxf c:IdentifiedObject.mRID ?pxfid.
 ?rtc c:RatioTapChanger.stepVoltageIncrement ?incr.
# ?rtc c:RatioTapChanger.tculControlMode ?moderaw.
#  bind(strafter(str(?moderaw),"TransformerControlMode.") as ?mode)
# ?rtc c:TapChanger.controlEnabled ?enabled.
 ?rtc c:TapChanger.highStep ?highStep.
 ?rtc c:TapChanger.lowStep ?lowStep.
 ?rtc c:TapChanger.ltcFlag ?ltc.
 ?rtc c:TapChanger.neutralStep ?neutralStep.
 ?rtc c:TapChanger.neutralU ?neutralU.
# ?rtc c:TapChanger.normalStep ?normalStep. # in SSH?
# ?rtc c:TapChanger.step ?step. # in SSH?
 OPTIONAL{?rtc c:TapChanger.subsequentDelay ?subDelay.
	?rtc c:TapChanger.initialDelay ?initDelay.
    ?rtc c:TapChanger.ctRating ?ctRating.
    ?rtc c:TapChanger.ctRatio ?ctRatio.
    ?rtc c:TapChanger.ptRating ?ptRatio.  # in the CIM XML as ptRating?
 }
 OPTIONAL{?rtc c:TapChanger.TapChangerControl ?ctl.
 ?ctl c:TapChangerControl.maxLimitVoltage ?vlim.
 ?ctl c:TapChangerControl.minLimitVoltage ?vmin.
 ?ctl c:TapChangerControl.lineDropCompensation ?ldc.
 ?ctl c:TapChangerControl.lineDropR ?fwdR.
 ?ctl c:TapChangerControl.lineDropX ?fwdX.
 ?ctl c:TapChangerControl.reverseLineDropR ?revR.
 ?ctl c:TapChangerControl.reverseLineDropX ?revX.
# ?ctl c:RegulatingControl.discrete ?discrete.
# ?ctl c:RegulatingControl.enabled ?ctl_enabled.
 ?ctl c:RegulatingControl.mode ?ctlmode. # ?ctlmoderaw.
#  bind(strafter(str(?ctlmoderaw),"RegulatingControlModeKind.") as ?ctlmode)
 ?ctl c:RegulatingControl.monitoredPhase ?monphs. # ?monraw
#  bind(strafter(str(?monraw),"PhaseCode.") as ?monphs)
# ?ctl c:RegulatingControl.targetDeadband ?vbw.
# ?ctl c:RegulatingControl.targetValue ?vset.
  }
}
ORDER BY ?pname ?tname ?rname ?wnum

